#COMPILE EXE
#DIM ALL
#DEBUG ERROR ON

#RESOURCE "ModifyHeaderComment.pbr"

#INCLUDE "comdlg32.inc"
#INCLUDE "win32api.inc"
#INCLUDE "DOPS_PB_CBW.INC"
#INCLUDE "DOPS_ExperimentInfo.inc"
#INCLUDE "DOPS_Utils.inc"
#INCLUDE "DOPS_Statistics.inc"

%TEXTBOX_COMMENT = 1000
%ID_OPEN = 1001
%ID_SAVE = 1002
%ID_CANCEL = 1003

GLOBAL ghDlg AS DWORD
GLOBAL filename AS STRING

' *********************************************************************************************
'                                  M A I N     P R O G R A M
' *********************************************************************************************
FUNCTION PBMAIN
    LOCAL hr AS DWORD


    CALL dlgControllerScreen()

    DIALOG SHOW MODAL ghDlg, CALL cbControllerScreen TO hr


        'SetWindowsPos
    CALL closeEventFile()

END FUNCTION

SUB dlgControllerScreen()
    LOCAL hr AS DWORD

    DIALOG NEW PIXELS, 0, "Modify Header Session Comment", EXPERIMENT.Misc.Screen(0).x, EXPERIMENT.Misc.Screen(0).y, 675, 300, %WS_OVERLAPPEDWINDOW, 0 TO ghDlg
    ' Use default styles
    CONTROL ADD TEXTBOX, ghDlg, %TEXTBOX_COMMENT, "", 83, 38, 503, 125, %ES_MULTILINE OR %ES_WANTRETURN,
    CONTROL ADD BUTTON, ghDlg, %ID_OPEN, "Open", 173, 203, 75, 25,,, CALL cbControllerOpen()
    CONTROL ADD BUTTON, ghDlg, %ID_SAVE, "Save", 277, 203, 75, 25,,, CALL cbControllerSave()
    CONTROL ADD BUTTON, ghDlg, %ID_CANCEL, "Close", 378, 203, 75, 25,,, CALL cbControllerCancel()

    DIALOG SET ICON hDlg, "Comments.ico"

END SUB

CALLBACK FUNCTION cbControllerScreen()
    LOCAL PS AS paintstruct

    SELECT CASE CBMSG
        CASE %WM_DESTROY
            PostQuitMessage 0

        CASE %WM_COMMAND
            SELECT CASE CBCTL
                CASE %IDCANCEL
                    IF CBCTLMSG = %BN_CLICKED OR CBCTLMSG = 1 THEN
                        DIALOG END CBHNDL, 0
                    END IF
            END SELECT
        CASE %WM_PAINT
                'beginpaint(ghDlg, PS)
                'endpaint ghDlg, PS
    END SELECT
END FUNCTION

CALLBACK FUNCTION cbControllerOpen() AS LONG
    LOCAL hr AS DWORD
    LOCAL lError AS LONG
    LOCAL sFileSpec AS STRING
    LOCAL Res AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
            '...Process the click event here


          OpenFileDialog (0, _                                  ' parent window
                          "Open Header File", _                         ' caption
                          sFileSpec, _                          ' filename   <- gets set to user selection
                          CURDIR$, _                            ' start directory
                          "Hdr Files|*.hdr|All Files|*.*", _  ' filename filter
                          "hdr", _                              ' default extension
                          0 _                                   ' flags
                         ) TO Res

          IF Res <> 0 THEN                                      ' Res nonzero = Not cancelled, No error
            filename =  PATHNAME$(PATH, sFileSpec) + PATHNAME$(NAMEX, sFileSpec)
            CALL GetHeaderComment(filename)
          END IF

        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbControllerSave() AS LONG
    LOCAL hr AS DWORD
    LOCAL lError AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
            '...Process the click event here
        CALL ModifyHeaderComment(filename)
        CALL GetHeaderComment(filename)

        MSGBOX "Saved."

        'DIALOG END CBHNDL
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbControllerCancel() AS LONG
    LOCAL hr AS DWORD
    LOCAL lError AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
            '...Process the click event here

        DIALOG END CBHNDL
        FUNCTION = 1
    END IF
END FUNCTION

SUB GetHeaderComment(filename AS STRING)
    LOCAL x, y, cnt, lPos AS LONG
    LOCAL tmpArray() AS STRING
    LOCAL comment AS STRING
    LOCAL flag AS INTEGER

    DIM tmpArray(2048)

    OPEN filename FOR INPUT AS #1

    LINE INPUT #1, tmpArray(0)

    cnt = 1
    WHILE ISFALSE EOF(1)  ' check if at end of file
      LINE INPUT #1, tmpArray(cnt)
      cnt = cnt + 1
    WEND

    CLOSE #1

    flag = 0
    FOR x = 1 TO cnt - 1
        lPos = INSTR(tmpArray(x), "<SessionDescription>")
        IF (lPos <> 0) THEN
            FOR y = x TO cnt - 1
                lPos = INSTR(tmpArray(y), "<Comment>")
                IF (lPos <> 0) THEN
                    flag = 1
                    comment = EXTRACT$(lPos + 9, tmpArray(y), "</")
                    CONTROL SET TEXT ghDlg, %TEXTBOX_COMMENT, comment
                    EXIT FOR
                END IF
            NEXT y
            EXIT FOR
        END IF
    NEXT x

    IF (flag = 0) THEN
        MSGBOX "No <Comment></Comment> found."
        SHELL("notepad.exe " + filename)
    END IF
END SUB

SUB ModifyHeaderComment(filename AS STRING)
    LOCAL x, y, cnt, lPos AS LONG
    LOCAL tmpArray() AS STRING
    LOCAL temp, comment, newComment AS STRING

    DIM tmpArray(2048)

    OPEN filename FOR INPUT AS #1

    LINE INPUT #1, tmpArray(0)

    cnt = 1
    WHILE ISFALSE EOF(1)  ' check if at end of file
      LINE INPUT #1, tmpArray(cnt)
      cnt = cnt + 1
    WEND

    CLOSE #1

    FOR x = 1 TO cnt - 1
        lPos = INSTR(tmpArray(x), "<SessionDescription>")
        IF (lPos <> 0) THEN
            FOR y = x TO cnt - 1
                lPos = INSTR(tmpArray(y), "<Comment>")
                IF (lPos <> 0) THEN
                    comment = EXTRACT$(lPos + 9, tmpArray(y), "</")
                    CONTROL GET TEXT ghDlg, %TEXTBOX_COMMENT TO newComment
                    temp = " (" + DATE$ + " " + TIME$ + ")"
                    newComment = newComment + temp
                    REPLACE comment WITH newComment IN tmpArray(y)
                    EXIT FOR
                END IF
            NEXT y
            EXIT FOR
        END IF
    NEXT x

    OPEN filename FOR OUTPUT AS #1


    FOR x = 1 TO cnt - 1
        PRINT #1, tmpArray(x)
    NEXT x

    CLOSE #1
END SUB
