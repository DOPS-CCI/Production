#COMPILE EXE
#DIM ALL
#DEBUG ERROR ON

#RESOURCE "RenameAndCopyFiles.pbr"


#INCLUDE "comdlg32.inc"
#INCLUDE "win32api.inc"
#INCLUDE "DOPS_ExperimentInfo.inc"

%MAXPPS_SIZE = 2048

%LISTBOX_FILES = 1005
%BUTTON_LOCATEHDR = 1006
%BUTTON_LOCATEEVT = 1007
%BUTTON_LOCATEBDF = 1008
%BUTTON_LOCATEETR = 1009

%BUTTON_MOVEFILES = 1010
%BUTTON_CANCEL = 1011
%BUTTON_DELETEFILES = 1012
%BUTTON_LOCATECAM = 1013


GLOBAL ghDlg AS DWORD
GLOBAL gazHdrFile, gazEvtFile, gazBDFFile, gazETRFile, gazNewBDFFile, gazNewETRFile, gazCAMFile AS ASCIIZ * 255
GLOBAL gsHeaderFilename AS STRING
GLOBAL giGotHdr, giGotEvt, giGotBDF, giGotETR AS INTEGER

' *********************************************************************************************
'                                  M A I N     P R O G R A M
' *********************************************************************************************
FUNCTION PBMAIN
    LOCAL lResult AS LONG

    CALL dlgRenameAndMoveFiles()
    DIALOG SHOW MODAL ghDlg, CALL cbRenameAndMoveFiles TO lResult


END FUNCTION

SUB dlgRenameAndMoveFiles()
    LOCAL hr AS DWORD

#PBFORMS BEGIN DIALOG %IDD_DIALOG1->->

    DIALOG NEW PIXELS, hr, "Rename And Copy Files", 9, 154, 634, 260, _
        %WS_OVERLAPPEDWINDOW OR %DS_CENTER OR %WS_VISIBLE OR %DS_3DLOOK OR _
        %DS_NOFAILCREATE OR %DS_SETFONT, %WS_EX_LEFT OR %WS_EX_LTRREADING OR _
        %WS_EX_RIGHTSCROLLBAR OR %WS_EX_CONTROLPARENT, TO ghDlg
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_LOCATEHDR, "Locate Header File", 19, _
        25, 113, 25, , , CALL cbLocateHeaderFile
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_LOCATEEVT, "Locate Event File", 19, _
        65, 113, 25, , , CALL  cbLocateEventFile
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_LOCATEBDF, "Locate BDF file", 19, 105, _
        113, 25, , , CALL cbLocateBDFFile()
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_LOCATEETR, "Locate Electrode File", _
        19, 145, 113, 25, , , CALL cbLocateETRFile()
    CONTROL ADD LISTBOX, ghDlg, %LISTBOX_FILES, , 159, 21, 441, 165
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_MOVEFILES, "Copy Files", 204, 208, 75, _
        30, , , CALL cbMoveFiles()
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_CANCEL, "Close", 424, 208, 75, 30, , , CALL cbCancel()
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_DELETEFILES, "Delete Files", 312, 208, _
        75, 30, , , CALL cbDeleteFiles()
    CONTROL ADD BUTTON,  ghDlg, %BUTTON_LOCATECAM, "Locate Camera File", 19, _
        184, 113, 25, , , CALL cbLocateCamFile()
#PBFORMS END DIALOG


    DIALOG SET ICON ghDlg, "RenAndMove.ico"

END SUB

CALLBACK FUNCTION cbRenameAndMoveFiles()
    SELECT CASE CBMSG
        CASE %WM_INITDIALOG
           giGotHdr = 0
           giGotEvt = 0
           giGotBDF = 0
           giGotETR = 0
        CASE %WM_DESTROY
            PostQuitMessage 0

        CASE %WM_COMMAND

        CASE %WM_PAINT
    END SELECT
END FUNCTION

CALLBACK FUNCTION cbLocateHeaderFile() AS LONG
    LOCAL sFileSpec AS STRING
    LOCAL Res AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        '...Process the click event here
        OpenFileDialog (0, _                                  ' parent window
              "Open .HDR File", _                         ' caption
              sFileSpec, _                          ' filename   <- gets set to user selection
              CURDIR$, _                            ' start directory
              "HDR Files|*.hdr", _  ' filename filter
              "hdr", _                              ' default extension
              0 _                                   ' flags
             ) TO Res

          IF Res <> 0 THEN                                      ' Res nonzero = Not cancelled, No error
            giGotHdr = 1
            gazHdrFile =  PATHNAME$(PATH, sFileSpec) + PATHNAME$(NAMEX, sFileSpec)
            gsHeaderFilename = PATHNAME$(NAME, sFileSpec)
            LISTBOX ADD ghDlg, %LISTBOX_FILES, gazHdrFile
          END IF
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbLocateEventFile() AS LONG
    LOCAL sFileSpec AS STRING
    LOCAL Res AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        '...Process the click event here
        OpenFileDialog (0, _                                  ' parent window
              "Open .EVT File", _                         ' caption
              sFileSpec, _                          ' filename   <- gets set to user selection
              CURDIR$, _                            ' start directory
              "EVT Files|*.evt", _  ' filename filter
              "evt", _                              ' default extension
              0 _                                   ' flags
             ) TO Res

          IF Res <> 0 THEN                                                 ' Res nonzero = Not cancelled, No error
            giGotEvt = 1
            gazEvtFile =  PATHNAME$(PATH, sFileSpec) + PATHNAME$(NAMEX, sFileSpec)
            LISTBOX ADD ghDlg, %LISTBOX_FILES, gazEvtFile
          END IF
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbLocateBDFFile() AS LONG
    LOCAL sFileSpec AS STRING
    LOCAL Res AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        '...Process the click event here
        OpenFileDialog (0, _                                  ' parent window
              "Open .BDF File", _                         ' caption
              sFileSpec, _                          ' filename   <- gets set to user selection
              CURDIR$, _                            ' start directory
              "BDF Files|*.bdf", _  ' filename filter
              "bdf", _                              ' default extension
              0 _                                   ' flags
             ) TO Res

          IF Res <> 0 THEN                                      ' Res nonzero = Not cancelled, No error
            giGotBDF = 1
            gazBDFFile =  PATHNAME$(PATH, sFileSpec) + PATHNAME$(NAMEX, sFileSpec)
            LISTBOX ADD ghDlg, %LISTBOX_FILES, gazBDFFile
          END IF
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbLocateETRFile() AS LONG
    LOCAL sFileSpec AS STRING
    LOCAL Res AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        '...Process the click event here
        OpenFileDialog (0, _                                  ' parent window
              "Open .ETR File", _                         ' caption
              sFileSpec, _                          ' filename   <- gets set to user selection
              CURDIR$, _                            ' start directory
              "ETR Files|*.etr", _  ' filename filter
              "etr", _                              ' default extension
              0 _                                   ' flags
             ) TO Res

          IF Res <> 0 THEN                                      ' Res nonzero = Not cancelled, No error
            giGotETR = 1
            gazETRFile =  PATHNAME$(PATH, sFileSpec) + PATHNAME$(NAMEX, sFileSpec)
            LISTBOX ADD ghDlg, %LISTBOX_FILES, gazETRFile
          END IF
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbLocateCamFile() AS LONG
    LOCAL sFileSpec AS STRING
    LOCAL Res AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        '...Process the click event here
        OpenFileDialog (0, _                                  ' parent window
              "Open .WMV File", _                         ' caption
              sFileSpec, _                          ' filename   <- gets set to user selection
              CURDIR$, _                            ' start directory
              "CAM Files|*.WMV", _  ' filename filter
              "wmv", _                              ' default extension
              0 _                                   ' flags
             ) TO Res

          IF Res <> 0 THEN                                      ' Res nonzero = Not cancelled, No error
            giGotHdr = 1
            gazCAMFile =  PATHNAME$(PATH, sFileSpec) + PATHNAME$(NAMEX, sFileSpec)
            LISTBOX ADD ghDlg, %LISTBOX_FILES, gazCamFile
          END IF
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbMoveFiles() AS LONG
    LOCAL folder, str AS STRING
    LOCAL y, z AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        IF (giGotHdr = 1 AND giGotEvt = 1 AND giGotBDF = 1 AND giGotETR = 1) THEN

            DISPLAY BROWSE ghDlg, , , "Where do you want to copy the files to (Default is DVD)?", "D:\",  %BIF_NEWDIALOGSTYLE  TO folder

            IF (folder <> "") THEN
                MOUSEPTR 11
                LISTBOX GET COUNT ghDlg, %LISTBOX_FILES TO y
                FOR z = 1 TO y
                    LISTBOX GET TEXT ghDlg, %LISTBOX_FILES, z TO str
                    'msgbox "FILECOPY " + str + "," + folder + "\" + PATHNAME$(NAMEX, str)
                    FILECOPY str ,  folder + "\" + gsHeaderFilename + PATHNAME$(EXTN, str)
                NEXT z
                MOUSEPTR 1
            END IF
        ELSE
            MSGBOX "You must have 4 files to copy (*.hdr, *.evt, *.bdf, *.etr)."
            EXIT FUNCTION
        END IF

        MSGBOX "Please verify that your files have been renamed properly and copied to the designated location."
        PostQuitMessage 1
        'DIALOG END ghDlg, 1
        FUNCTION = 1
    END IF
END FUNCTION

CALLBACK FUNCTION cbCancel() AS LONG
  IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
    '...Process the click event here
     PostQuitMessage 0
     DIALOG END ghDlg, 0
    FUNCTION = 1
  END IF
END FUNCTION

CALLBACK FUNCTION cbDeleteFiles() AS LONG
    LOCAL folder, str AS STRING
    LOCAL y, z, result AS LONG

    IF CB.MSG = %WM_COMMAND AND CB.CTLMSG = %BN_CLICKED THEN
        IF (giGotHdr = 1 AND giGotEvt = 1 AND giGotBDF = 1 AND giGotETR = 1) THEN
            result = MSGBOX("Are you sure you want to delete the original files?", %MB_YESNO, "Delete Files?")

            IF (result = %IDYES) THEN
                LISTBOX GET COUNT ghDlg, %LISTBOX_FILES TO y
                FOR z = 1 TO y
                    LISTBOX GET TEXT ghDlg, %LISTBOX_FILES, z TO str
                    'msgbox "FILECOPY " + str + "," + folder + "\" + PATHNAME$(NAMEX, str)
                    KILL str
                NEXT z
                MOUSEPTR 1
            END IF
        ELSE
            MSGBOX "You must have 4 files to delete (*.hdr, *.evt, *.bdf, *.etr)."
            EXIT FUNCTION
        END IF

        MSGBOX "Your original files have been deleted properly."
        PostQuitMessage 1
        'DIALOG END ghDlg, 1
        FUNCTION = 1
    END IF
END FUNCTION
