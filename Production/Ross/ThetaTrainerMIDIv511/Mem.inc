#INCLUDE THIS ONCE

DECLARE FUNCTION GlobalAlloc LIB "Kernel32.dll" ALIAS "GlobalAlloc" (BYVAL uFlags AS DWORD, BYVAL dwBytes AS DWORD) AS DWORD

DECLARE FUNCTION GlobalReAlloc LIB "Kernel32.dll" ALIAS "GlobalReAlloc" (BYVAL hMem AS DWORD, BYVAL dwBytes AS DWORD, BYVAL uFlags AS DWORD) AS DWORD

DECLARE FUNCTION GlobalFree LIB "Kernel32.dll" ALIAS "GlobalFree" (BYVAL hMem AS DWORD) AS DWORD

%GMEM_FIXED_         = &H0000
%GMEM_MOVEABLE_      = &H0002
%GMEM_NOCOMPACT_     = &H0010
%GMEM_NODISCARD_     = &H0020
%GMEM_ZEROINIT_      = &H0040
%GMEM_MODIFY_        = &H0080
%GMEM_DISCARDABLE_   = &H0100
%GMEM_NOT_BANKED_    = &H1000
%GMEM_SHARE_         = &H2000
%GMEM_DDESHARE_      = &H2000
%GMEM_NOTIFY_        = &H4000
%GMEM_LOWER_         = %GMEM_NOT_BANKED_
%GMEM_VALID_FLAGS_   = &H7F72
%GMEM_INVALID_HANDLE_ = &H08000

%GHND_               = (%GMEM_ZEROINIT_ OR %GMEM_MOVEABLE_)
%GPTR_               = (%GMEM_ZEROINIT_ OR %GMEM_FIXED_)


FASTPROC MemAlloc(BYVAL COUNT AS LONG) THREADSAFE AS LONG
    STATIC hMem AS LONG : hMem = 0
    IF COUNT THEN hMem = GlobalAlloc(BYVAL %GPTR_, BYVAL COUNT)
END FASTPROC = hMem

FASTPROC MemReAlloc(BYVAL h AS LONG, BYVAL COUNT AS LONG) THREADSAFE AS LONG
    STATIC hMem AS LONG : hMem = 0
    IF h THEN
        hMem = GlobalReAlloc(BYVAL h, BYVAL COUNT, BYVAL %GMEM_MOVEABLE_ OR %GMEM_ZEROINIT_)
    ELSE
        hMem = GlobalAlloc(BYVAL %GPTR_, BYVAL COUNT)
    END IF
END FASTPROC = hMem

FASTPROC MemFree(BYVAL h AS LONG) THREADSAFE AS LONG
    IF h THEN GlobalFree(BYVAL h)
END FASTPROC = 0

FUNCTION MemFreeObj(BYVAL h AS LONG) AS LONG
    LOCAL o AS IUNKNOWN
    IF h THEN
        POKE LONG, VARPTR(o), h
        o = NOTHING
    END IF
END FUNCTION
